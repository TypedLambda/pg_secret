* Cleanup code (make api functions only deal with Secret type)
* Use libtool to compile for multiple platforms (test on linux)
* Link to external fastore library (or at least make a submodule)
* Package as an extension
* Store (or workout how to retrieve) the original data value (maybe a simple AES block encrypt)
* Determine how to avoid accidentally logging the key in psql sessions or elsewhere
* Can the prf_key be safely derived from the prp_key or vice-versa?
* Load test with 1000's or millions of records (CPU/Memory/Disk performance)

Later
* Landing page to capture interest (use ASCIIcasts)
* Key rotation and management
* Ruby gem for ActiveRecord?
* Docker image and K8ts cluster - GCP?
* Encryption at rest
* SSL/TLS connectivity
* Secure authentication schemes (e.g. Kerberos)
* Secure Backups/Restore
* Followers like Heroku PG (streaming replication)
* Secure logging (public key encrypted? Later, modulo search)
* Determine pricing and restriction model (DB size, num rows?)
* Work out to make a Heroku/AWS/GCP addon
* Region/storage selection for an instance
* ISO/SOC2 compliance

Done
* Decode keys from base64 or binary (_in vs _recv)
* Make out function encode data as B64
